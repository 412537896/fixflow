<?xml version="1.0" encoding="UTF-8"?>
<sqlmappingconfig:RulesConfig id="taskIdentityLink" xmlns:sqlmappingconfig="http://www.founderfix.com/sqlmappingconfig">


	<!-- 任务表 -->
	<dataBaseTable tableId="fixflow_run_taskidentitylink" tableName="任务候选人表" tableValue="FIXFLOW_RUN_TASKIDENTITYLINK">
		<column column="ID" name="编号" jdbcType="VARCHAR" />
		<column column="TYPE" name="分配类型" jdbcType="VARCHAR" />
		<column column="USER_ID" name="用户编号" jdbcType="VARCHAR" />
		<column column="GROUP_ID" name="组编号" jdbcType="VARCHAR" />
		<column column="GROUP_TYPE" name="组类型" jdbcType="VARCHAR" />
		<column column="TASKINSTANCE_ID" name="任务实例编号" jdbcType="VARCHAR" />
		<column column="INCLUDE_EXCLUSION" name="包含排除" jdbcType="VARCHAR" />
		<column column="ARCHIVE_TIME" name="归档时间" jdbcType="TIMESTAMP" />
	</dataBaseTable>
	
	<!-- 任务表 -->
	<resultMap id="identityLinkResultMap" name="任务表" type="com.founder.fix.fixflow.core.impl.task.IdentityLinkEntity">
		<result property="id" column="ID" name="编号" jdbcType="VARCHAR" />
		<result property="typeString" column="TYPE" name="分配类型" jdbcType="VARCHAR" />
		<result property="userId" column="USER_ID" name="用户编号" jdbcType="VARCHAR" />
		<result property="groupId" column="GROUP_ID" name="组编号" jdbcType="VARCHAR" />
		<result property="groupType" column="GROUP_TYPE" name="组类型" jdbcType="VARCHAR" />
		<result property="taskId" column="TASKINSTANCE_ID" name="任务实例编号" jdbcType="VARCHAR" />
		<result property="includeExclusionString" column="INCLUDE_EXCLUSION" name="包含排除" jdbcType="VARCHAR" />
		<result property="archive" column="ARCHIVE_TIME" name="归档时间" jdbcType="TIMESTAMP" />
	</resultMap>
	

	<insert id="insertIdentityLink" parameterType="com.founder.fix.fixflow.core.task.IdentityLinkEntity" remark="插入候选人">
		<![CDATA[ 
			sqlCommand.insert("FIXFLOW_RUN_TASKIDENTITYLINK",parameter.getPersistentDbMap());
		]]>
	</insert>

	<delete id="deleteIdentityLinkByProcessInstanceId" parameterType="java.lang.String" remark="删除流程实例对应的所有候选人">
		<![CDATA[ 
			
		]]>
	</delete>
	
	<update id="updateIdentityLink" parameterType="com.founder.fix.fixflow.core.task.IdentityLinkEntity" remark="更新任务候选人">
		<![CDATA[ 
			objectParamWhere = { parameter.getId() };
			sqlCommand.update("FIXFLOW_RUN_TASKIDENTITYLINK",  parameter.getPersistentDbMap(), " ID=?",objectParamWhere);
		]]>
	</update>

	<select id="selectIdentityLinkById" parameterType="java.lang.String" resultMap="identityLinkResultMap" remark="查询单个任务候选人">
		<![CDATA[
			sqlText = "SELECT * FROM FIXFLOW_RUN_TASKIDENTITYLINK WHERE ID = ? ";
			objectParamWhere = new ArrayList();
			objectParamWhere.add(parameter);
			sqlCommand.queryForList(sqlText, objectParamWhere);
		]]>
	</select>
	
	<select id="selectIdentityLinksByTask" parameterType="java.lang.String" resultMap="identityLinkResultMap" remark="查询单个任务候选人">
		<![CDATA[
			sqlText = "SELECT * FROM FIXFLOW_RUN_TASKIDENTITYLINK WHERE TASKINSTANCE_ID = ? ";
			taskId = parameter.getParameter();
			objectParamWhere = new ArrayList();
			objectParamWhere.add(taskId);
			sqlCommand.queryForList(sqlText, objectParamWhere);
		]]>
	</select>
	
	
	<businessRules id="getIdentityLinkPersistentDbMap" parameterType="com.founder.fix.fixflow.core.task.IdentityLinkEntity" resultType="java.util.Map" remark="返回Task对象需要保存到数据的字段Map">
	<![CDATA[ 
		objectParam = new HashMap<String, Object>();
		objectParam.put("ID", parameter.getId());
		objectParam.put("TYPE", parameter.getType().toString());
		objectParam.put("USER_ID", parameter.getUserId());
		objectParam.put("GROUP_ID", parameter.getGroupId());
		objectParam.put("GROUP_TYPE", parameter.getGroupType());
		objectParam.put("INCLUDE_EXCLUSION", parameter.getIncludeExclusion().toString());
		objectParam.put("TASKINSTANCE_ID", parameter.getTaskId());
		objectParam.put("ARCHIVE_TIME", parameter.getArchiveTime());
		extensionFields=parameter.getExtensionFields();	
		for (String key : extensionFields.keySet()) {
			objectParam.put(key, extensionFields.get(key));
		}
		return objectParam;
	]]>
	</businessRules>
	
	
	<businessRules id="getIdentityLinkPersistentState" parameterType="com.founder.fix.fixflow.core.task.IdentityLinkEntity" resultType="java.util.Map" remark="将Token对象转换成Map用来数据传递">
	<![CDATA[ 
		objectParam = new HashMap<String, Object>();
		objectParam.put("id", parameter.getId());
		objectParam.put("type", parameter.getType().toString());
		objectParam.put("userId", parameter.getUserId());
		objectParam.put("groupId", parameter.getGroupId());
		objectParam.put("groupType", parameter.getGroupType());
		objectParam.put("includeExclusion", parameter.getIncludeExclusion().toString());
		objectParam.put("taskId", parameter.getTaskId());
		objectParam.put("archiveTime", parameter.getArchiveTime());
		persistenceExtensionFields=parameter.getPersistenceExtensionFields();	
		for (String key : persistenceExtensionFields.keySet()) {
			objectParam.put(key, persistenceExtensionFields.get(key));	
		}
		return objectParam;
	]]>
	</businessRules>
	
	<businessRules id="identityLinkClone" parameterType="com.founder.fix.fixflow.core.task.IdentityLinkEntity" resultType="com.founder.fix.fixflow.core.task.IdentityLinkEntity" remark="令牌实例拷贝">
	<![CDATA[ 
		identityLinkEntity = new IdentityLinkEntity();
		identityLinkEntity.persistentInit(sysRulesConfig.getResultMap("identityLinkResultMap"),parameter.getPersistentDbMap());
		return identityLinkEntity;
	]]>
	</businessRules>

</sqlmappingconfig:RulesConfig>
