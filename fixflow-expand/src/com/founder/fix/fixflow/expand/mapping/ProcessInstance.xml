<?xml version="1.0" encoding="UTF-8"?>
<sqlmappingconfig:RulesConfig id="processInstance" xmlns:sqlmappingconfig="http://www.founderfix.com/sqlmappingconfig">


	<!-- 运行实例表 -->
	<dataBaseTable tableId="fixflow_run_processinstance" tableName="流程实例表" tableValue="FIXFLOW_RUN_PROCESSINSTANCE" archiveTable="FIXFLOW_HIS_PROCESSINSTANCE">
		<column column="PROCESSINSTANCE_ID" name="编号" jdbcType="VARCHAR" />
		<column column="PROCESSDEFINITION_ID" name="流程定义唯一编号" jdbcType="VARCHAR" />
		<column column="SUBJECT" name="流程实例主题" jdbcType="VARCHAR" />
		<column column="START_TIME" name="启动时间" jdbcType="TIMESTAMP" />
		<column column="END_TIME" name="结束时间" jdbcType="TIMESTAMP" />
		<column column="DEFINITION_ID" name="业务定义编号" jdbcType="VARCHAR" />
		<column column="ROOTTOKEN_ID" name="根令牌编号" jdbcType="VARCHAR" />
		<column column="BIZ_KEY" name="业务关联键值" jdbcType="VARCHAR" />
		<column column="INITIATOR" name="提交人" jdbcType="VARCHAR" />
		<column column="ISSUSPENDED" name="是否暂停" jdbcType="VARCHAR" />
		<column column="PROCESSDEFINITION_KEY" name="流程定义编号" jdbcType="VARCHAR" />
		<column column="PARENT_INSTANCE_ID" name="父流程实例编号"  jdbcType="VARCHAR" />
		<column column="PARENT_INSTANCE_TOKEN_ID" name="父流程实例令牌编号" jdbcType="VARCHAR" />
		<column column="UPDATE_TIME" name="更新时间" jdbcType="TIMESTAMP" />
		<column column="START_AUTHOR" name="启动人" jdbcType="VARCHAR" />
		<column column="PROCESSLOCATION" name="流程位置" jdbcType="VARCHAR" />
		<column column="ISPIGEONHOLE" name="实例编号" jdbcType="VARCHAR" />
		<column column="INSTANCE_STATUS" name="实例状态" jdbcType="VARCHAR" />
		<column column="ARCHIVE_TIME" name="归档时间" jdbcType="TIMESTAMP" />
	</dataBaseTable>
	
	<resultMap id="processInstanceResultMap" name="任务表" type="com.founder.fix.fixflow.core.impl.runtime.ProcessInstanceEntity">
		<result property="id" column="PROCESSINSTANCE_ID" name="令牌编号" jdbcType="VARCHAR" />
		<result property="subject" column="SUBJECT" name="令牌编号" jdbcType="VARCHAR" />
		<result property="processDefinitionKey" column="PROCESSDEFINITION_KEY" name="令牌编号" jdbcType="VARCHAR" />
		<result property="processDefinitionId" column="PROCESSDEFINITION_ID" name="令牌编号" jdbcType="VARCHAR" />
		<result property="definitionId" column="DEFINITION_ID" name="令牌编号" jdbcType="VARCHAR" />
		<result property="rootTokenId" column="ROOTTOKEN_ID" name="令牌编号" jdbcType="VARCHAR" />
		<result property="parentProcessInstanceId" column="PARENT_INSTANCE_ID" name="令牌编号" jdbcType="VARCHAR" />
		<result property="parentProcessInstanceTokenId" column="PARENT_INSTANCE_TOKEN_ID" name="令牌编号" jdbcType="VARCHAR" />
		<result property="startTime" column="START_TIME" name="令牌编号" jdbcType="TIMESTAMP" />
		<result property="endTime" column="END_TIME" name="令牌编号" jdbcType="TIMESTAMP" />
		<result property="updateTime" column="UPDATE_TIME" name="令牌编号" jdbcType="TIMESTAMP" />
		<result property="archiveTime" column="ARCHIVE_TIME" name="令牌编号" jdbcType="TIMESTAMP" />
		<result property="bizKey" column="BIZ_KEY" name="令牌编号" jdbcType="VARCHAR" />
		<result property="startAuthor" column="START_AUTHOR" name="令牌编号" jdbcType="VARCHAR" />
		<result property="initiator" column="INITIATOR" name="令牌编号" jdbcType="VARCHAR" />
		<result property="processLocation" column="PROCESSLOCATION" name="令牌编号" jdbcType="VARCHAR" />
		
		<result property="instanceTypeString" column="INSTANCE_STATUS" name="令牌编号" jdbcType="VARCHAR" />
		<result property="suspendedString" column="ISSUSPENDED" name="令牌编号" jdbcType="VARCHAR" />
	</resultMap>	

	<insert id="insertProcessInstance" parameterType="com.founder.fix.fixflow.core.impl.runtime.ProcessInstanceEntity" remark="插入新的流程实例">
	<![CDATA[ 
		sqlCommand.insert("FIXFLOW_RUN_PROCESSINSTANCE",parameter.getPersistentDbMap());
	]]>
	</insert>
	
	<delete id="deleteProcessInstanceByProcessInstanceId" parameterType="String" remark="删除流程实例">
	<![CDATA[ 
	
		Object[] objectParamWhere = { parameter };
		sqlCommand.delete(ProcessInstanceObjKey.ProcessInstanceTableName(), " PROCESSINSTANCE_ID=?",objectParamWhere);
		sqlCommand.delete(ProcessInstanceObjKey.ProcessInstanceHisTableName(), " PROCESSINSTANCE_ID=?",objectParamWhere);
	
	]]>
	
	</delete>
	<update id="updateProcessInstance" parameterType="入参类型" remark="备注">
		<![CDATA[ 
			Object[] objectParamWhere = new Object[1];
			objectParamWhere[0]=parameter.getId() ;
			sqlCommand.update("FIXFLOW_RUN_PROCESSINSTANCE",  parameter.getPersistentDbMap(), " PROCESSINSTANCE_ID=?",objectParamWhere);
		]]>
	</update>
	
	<select id="selectProcessInstanceCountById" parameterType="java.lang.String" remark="查询流程实例是否存在">
		<![CDATA[ 
			sqlText = "SELECT count(*) FROM FIXFLOW_RUN_PROCESSINSTANCE  WHERE PROCESSINSTANCE_ID=?";
			List<Object> objectParamWhere = new ArrayList<Object>();
			objectParamWhere.add(parameter);
			
			Object returnObj = sqlCommand.queryForValue(sqlText, objectParamWhere);
			return Integer.parseInt(returnObj.toString());
		]]>
	</select>
	
	<select id="findProcessInstanceById" parameterType="java.lang.String" resultMap="processInstanceResultMap" remark="根据流程实例编号查询流程对象">
		<![CDATA[ 
		
		sqlText = "SELECT * FROM FIXFLOW_RUN_PROCESSINSTANCE WHERE PROCESSINSTANCE_ID=?";
		// 构建查询参数
		objectParamWhere = new ArrayList<Object>();
		objectParamWhere.add(parameter);

		dataObj = sqlCommand.queryForList(sqlText, objectParamWhere);
		return dataObj;
		
		]]>
	</select>
	
	
	<select id="findSubProcessInstanceById" parameterType="java.lang.String" resultMap="processInstanceResultMap" remark="根据流程实例编号查询子流程对象">
		<![CDATA[ 
		
		
		sqlText = "SELECT * FROM FIXFLOW_RUN_PROCESSINSTANCE WHERE PARENT_INSTANCE_ID =? AND END_TIME IS NULL";
		objectParamWhere = new ArrayList<Object>();
		objectParamWhere.add(parameter);

		dataList=sqlCommand.queryForList(sqlText,objectParamWhere);
		
		
		
		return dataList;
		
		]]>
	</select>
	
	
	<select id="findSubProcessInstanceByIdAndToken" parameterType="Map" resultMap="processInstanceResultMap" remark="根据流程实例编号和令牌号查询子流程对象">
		<![CDATA[ 
		
		sqlText = "SELECT * FROM FIXFLOW_RUN_PROCESSINSTANCE WHERE PARENT_INSTANCE_ID  = ? AND END_TIME IS NULL AND PARENT_INSTANCE_TOKEN_ID =?";
		
		objectParamWhere = new ArrayList<Object>();
		objectParamWhere.add(parameter.get("processInstanceId"));
		objectParamWhere.add(parameter.get("tokenId"));

		dataList=sqlCommand.queryForList(sqlText,objectParamWhere);

		return dataList;
		]]>
	</select>
	

	
	
	
	<select id="selectProcessInstanceIdsByProcessDefinitionId" parameterType="java.lang.String"  remark="备注">
		<![CDATA[ 
		processInstanceIds = new ArrayList<String>();
		String sql = "select PROCESSINSTANCE_ID from "+ProcessInstanceObjKey.getTableName(QueryLocation.RUN_HIS)+" p where p.processdefinition_id =?";
		objectParamWhere = new ArrayList<Object>();
		objectParamWhere.add(parameter);
		dataObj = sqlCommand.queryForList(sql, objectParamWhere);
		for(tmp :dataObj){
			processInstanceIds.add(StringUtil.getString(tmp.get("PROCESSINSTANCE_ID")));
		}
		return processInstanceIds;
		]]>
	</select>
	
	
	
	<select id="selectProcessInstanceByQueryCriteria" 
	parameterType="com.founder.fix.fixflow.core.impl.db.ListQueryParameterObject"  
	resultMap="processInstanceResultMap" 
	classPath="com.founder.fix.fixflow.expand.rulescript.ProcessInstanceQueryScript"
	remark="查询流程实例对象"/>

	<select id="selectProcessInstanceCountByQueryCriteria" 
	parameterType="com.founder.fix.fixflow.core.impl.db.ListQueryParameterObject"  
	resultMap="processInstanceResultMap" 
	classPath="com.founder.fix.fixflow.expand.rulescript.ProcessInstanceQueryCountScript"
	remark="查询流程实例对象数量"/>
	
	<select id="findProcessInstanceByDefKeyAndBusinessKey" parameterType="Map" resultMap="processInstanceResultMap" remark="根据流程key和业务值查询流程实例">
	
		<![CDATA[ 
		
		sqlString = " SELECT * FROM "+ProcessInstanceObjKey.ProcessInstanceTableName()+" WHERE PROCESSDEFINITION_KEY=?  AND BIZ_KEY=? ";
		objectParamWhere = new ArrayList<Object>();
		objectParamWhere.add(parameter.get("processDefinitionKey"));
		objectParamWhere.add(parameter.get("businessKey"));

		dataObj = sqlCommand.queryForList(sqlText, objectParamWhere);
		return dataObj;
		
		]]>
	
	</select>
	
	
	
	<businessRules id="getProcessInstancePersistentDbMap" parameterType="com.founder.fix.fixflow.core.impl.runtime.ProcessInstanceEntity" resultType="java.util.Map" remark="返回Task对象需要保存到数据的字段Map">
	<![CDATA[ 
		objectParam = new HashMap<String, Object>();
		objectParam.put("PROCESSINSTANCE_ID", parameter.id);
		objectParam.put("SUBJECT", parameter.getSubject());
		objectParam.put("PROCESSDEFINITION_KEY", parameter.getProcessDefinitionKey());
		objectParam.put("PROCESSDEFINITION_ID", parameter.processDefinitionId);
		objectParam.put("DEFINITION_ID", parameter.getProcessDefinition().getDefinitions().getId());
		objectParam.put("ROOTTOKEN_ID", parameter.getRootToken().getId());
		objectParam.put("PARENT_INSTANCE_ID", parameter.getParentProcessInstanceId());
		objectParam.put("PARENT_INSTANCE_TOKEN_ID", parameter.getParentProcessInstanceTokenId());
		objectParam.put("BIZ_KEY", parameter.getBizKey());
		objectParam.put("INITIATOR", parameter.getInitiator());
		objectParam.put("START_AUTHOR", parameter.getStartAuthor());
		objectParam.put("START_TIME", parameter.startTime);
		objectParam.put("END_TIME", parameter.endTime);
		objectParam.put("UPDATE_TIME", parameter.getUpdateTime());
		objectParam.put("ARCHIVE_TIME", parameter.getArchiveTime());
		objectParam.put("ISSUSPENDED", String.valueOf(parameter.isSuspended()));
		objectParam.put("PROCESSLOCATION", parameter.getProcessLocation());
		objectParam.put("INSTANCE_STATUS", parameter.getInstanceType().toString());
		extensionFields=parameter.getExtensionFields();	
		for (String key : extensionFields.keySet()) {
			objectParam.put(key, extensionFields.get(key));
		}
		return objectParam;
		
	]]>
	</businessRules>
	
	
	<businessRules id="getProcessInstancePersistentState" parameterType="com.founder.fix.fixflow.core.impl.runtime.ProcessInstanceEntity" resultType="java.util.Map" remark="将Token对象转换成Map用来数据传递">
	<![CDATA[ 
		mapPersistentState = new HashMap<String, Object>();
		mapPersistentState.put("processInstanceId", this.id);
		mapPersistentState.put("subject", this.subject);
		mapPersistentState.put("processDefinitionKey", this.processDefinitionKey);
		mapPersistentState.put("processDefinitionId", this.processDefinitionId);
		mapPersistentState.put("rootTokenId", this.rootTokenId);
		mapPersistentState.put("definitionId", this.definitionId);
		mapPersistentState.put("parentProcessInstanceId", this.parentProcessInstanceId);
		mapPersistentState.put("parentProcessInstanceTokenId", this.parentProcessInstanceTokenId);
		mapPersistentState.put("initiator", this.initiator);
		mapPersistentState.put("startAuthor", this.startAuthor);
		mapPersistentState.put("bizKey", this.bizKey);
		mapPersistentState.put("startTime", this.startTime);
		mapPersistentState.put("endTime", this.endTime);
		mapPersistentState.put("updateTime", this.updateTime);
		mapPersistentState.put("archiveTime", this.archiveTime);
		mapPersistentState.put("isSuspended", this.isSuspended);
		mapPersistentState.put("processLocation", this.processLocation);
		mapPersistentState.put("instanceStatus", this.instanceType);
		persistenceExtensionFields=parameter.getPersistenceExtensionFields();	
		for (String key : persistenceExtensionFields.keySet()) {
			mapPersistentState.put(key, persistenceExtensionFields.get(key));	
		}
		return mapPersistentState;
	]]>
	</businessRules>
	
	<businessRules id="processInstanceClone" parameterType="com.founder.fix.fixflow.core.impl.runtime.ProcessInstanceEntity" resultType="com.founder.fix.fixflow.core.impl.runtime.ProcessInstanceEntity" remark="流程实例拷贝">
	<![CDATA[ 
		processInstanceEntity = new ProcessInstanceEntity();
		processInstanceEntity.persistentInit(sysRulesConfig.getResultMap("processInstanceResultMap"),parameter.getPersistentDbMap());
		return processInstanceEntity;
	]]>
	</businessRules>

</sqlmappingconfig:RulesConfig>
