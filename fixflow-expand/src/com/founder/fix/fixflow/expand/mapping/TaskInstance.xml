<?xml version="1.0" encoding="UTF-8"?>
<sqlmappingconfig:RulesConfig id="taskInstance" xmlns:sqlmappingconfig="http://www.founderfix.com/sqlmappingconfig">


	<!-- 任务表 -->
	<dataBaseTable tableId="fixflow_run_taskinstance" tableName="任务表" tableValue="FIXFLOW_RUN_TASKINSTANCE" archiveTable="FIXFLOW_HIS_TASKINSTANCE">
		<column column="TASKINSTANCE_ID" name="任务实例编号" jdbcType="VARCHAR" />
		<column column="NAME" name="任务名称" jdbcType="VARCHAR" />
		<column column="DESCRIPTION" name="任务主题" jdbcType="VARCHAR" />
		<column column="PROCESSINSTANCE_ID" name="流程实例编号" jdbcType="VARCHAR" />
		<column column="PROCESSDEFINITION_ID" name="流程定义唯一编号" jdbcType="VARCHAR" />
		<column column="PROCESSDEFINITION_KEY" name="流程定义编号" jdbcType="VARCHAR" />
		<column column="PROCESSDEFINITION_NAME" name="流程定义名称" jdbcType="VARCHAR" />
		<column column="VERSION" name="任务版本号" jdbcType="INTEGER" />
		<column column="TOKEN_ID" name="任务令牌号" jdbcType="VARCHAR" />
		<column column="NODE_ID" name="节点编号" jdbcType="VARCHAR" />
		<column column="NODE_NAME" name="节点名称" jdbcType="VARCHAR" />
		<column column="PARENTTASK_ID" name="父任务" jdbcType="VARCHAR" />
		<column column="ASSIGNEE" name="任务处理人" jdbcType="VARCHAR" />
		<column column="CLAIM_TIME" name="领取时间" jdbcType="TIMESTAMP" />
		<column column="CREATE_TIME" name="创建时间" jdbcType="TIMESTAMP" />
		<column column="START_TIME" name="开始时间" jdbcType="TIMESTAMP" />
		<column column="END_TIME" name="结束时间" jdbcType="TIMESTAMP" />
		<column column="DUEDATE" name="处理期限" jdbcType="TIMESTAMP" />
		
		<column column="PRIORITY" name="优先级别" jdbcType="INTEGER" />
		<column column="CATEGORY" name="用户分类" jdbcType="VARCHAR" />
		<column column="OWNER" name="任务所有者" jdbcType="VARCHAR" />
		<column column="DELEGATIONSTATESTRING" simpleKey="delegationState" jdbcType="VARCHAR" />
		<column column="BIZKEY" name="业务关联键值" jdbcType="VARCHAR" />
		<column column="TASK_COMMENT" name="处理意见" jdbcType="VARCHAR" />
		<column column="FORMURI" name="操作表单" jdbcType="VARCHAR" />
		<column column="FORMURIVIEW" name="浏览表单" jdbcType="VARCHAR" />
		<column column="TASKGROUP" name="会签任务组编号" jdbcType="VARCHAR" />
		<column column="TASKTYPE" name="任务类型" jdbcType="VARCHAR" />
		<column column="ISBLOCKING" name="是否阻塞" jdbcType="VARCHAR" />
		<column column="ISCANCELLED" name="是否取消" jdbcType="VARCHAR" />
		<column column="ISSUSPENDED" name="是否暂停" jdbcType="VARCHAR" />
		<column column="ISOPEN" name="是否打开" jdbcType="VARCHAR" />
		<column column="ISDRAFT" name="是否草稿" jdbcType="VARCHAR" />
		<column column="EXPECTED_EXECUTIONTIME" name="预计执行时间" jdbcType="INTEGER" />
		<column column="AGENT" name="任务代理处理者" jdbcType="VARCHAR" />
		<column column="ADMIN" name="管理员处理" jdbcType="VARCHAR" />
		<column column="CALLACTIVITY_INSTANCE_ID" name="调用子流程时生成的子流程实例号，用于子流程结束的时候关闭这个任务" jdbcType="VARCHAR" />
		<column column="PENDINGTASKID" name="转办任务编号" jdbcType="VARCHAR" />
		<column column="ARCHIVE_TIME" name="归档时间" jdbcType="TIMESTAMP" />
		<column column="COMMAND_ID" name="处理命令编号" jdbcType="VARCHAR" />
		<column column="COMMAND_TYPE" name="处理命令类型" jdbcType="VARCHAR" />
		<column column="COMMAND_MESSAGE" name="处理命令内容" jdbcType="VARCHAR" />
	</dataBaseTable>

	<!-- 任务表 -->
	<resultMap id="taskResultMap" name="任务表" type="com.founder.fix.fixflow.core.impl.task.TaskInstanceEntity">
		<result property="id" column="TASKINSTANCE_ID" name="任务实例编号" jdbcType="VARCHAR" />
		<result property="name" column="NAME" name="任务名称" jdbcType="VARCHAR" />
		<result property="description" column="DESCRIPTION" name="任务主题" jdbcType="VARCHAR" />
		<result property="processInstanceId" column="PROCESSINSTANCE_ID" name="流程实例编号" jdbcType="VARCHAR" />
		<result property="processDefinitionId" column="PROCESSDEFINITION_ID" name="流程定义唯一编号" jdbcType="VARCHAR" />
		<result property="processDefinitionKey" column="PROCESSDEFINITION_KEY" name="流程定义编号" jdbcType="VARCHAR" />
		<result property="processDefinitionName" column="PROCESSDEFINITION_NAME" name="流程定义名称" jdbcType="VARCHAR" />
		<result property="version" column="VERSION" name="任务版本号" jdbcType="INTEGER" />
		<result property="tokenId" column="TOKEN_ID" name="任务令牌号" jdbcType="VARCHAR" />
		<result property="nodeId" column="NODE_ID" name="节点编号" jdbcType="VARCHAR" />
		<result property="nodeName" column="NODE_NAME" name="节点名称" jdbcType="VARCHAR" />
		<result property="parentTaskInstanceId" column="PARENTTASK_ID" name="归档时间" jdbcType="VARCHAR" />
		<result property="assignee" column="ASSIGNEE" name="任务处理人" jdbcType="VARCHAR" />
		<result property="claimTime" column="CLAIM_TIME" name="领取时间" jdbcType="TIMESTAMP" />
		<result property="createTime" column="CREATE_TIME" name="创建时间" jdbcType="TIMESTAMP" />
		<result property="startTime" column="START_TIME" name="开始时间" jdbcType="TIMESTAMP" />
		<result property="endTime" column="END_TIME" name="结束时间" jdbcType="TIMESTAMP" />
		<result property="dueDate" column="DUEDATE" name="处理期限" jdbcType="TIMESTAMP" />
		
		<result property="priority" column="PRIORITY" name="优先级别" jdbcType="INTEGER" />
		<result property="category" column="CATEGORY" name="用户分类" jdbcType="VARCHAR" />
		<result property="owner" column="OWNER" name="任务所有者" jdbcType="VARCHAR" />
		<result property="delegationStateString" column="DELEGATIONSTATESTRING" name="任务代理状态" jdbcType="VARCHAR" />
		<result property="bizKey" column="BIZKEY" name="业务关联键值" jdbcType="VARCHAR" />
		<result property="taskComment" column="TASK_COMMENT" name="处理意见" jdbcType="VARCHAR" />
		<result property="formUri" column="FORMURI" name="操作表单" jdbcType="VARCHAR" />
		<result property="formUriView" column="FORMURIVIEW" name="浏览表单" jdbcType="VARCHAR" />
		<result property="taskGroup" column="TASKGROUP" name="会签任务组编号" jdbcType="VARCHAR" />
		<result property="taskInstanceTypeString" column="TASKTYPE" name="任务类型" jdbcType="VARCHAR" />
		<result property="blockingString" column="ISBLOCKING" name="是否阻塞" jdbcType="VARCHAR" />
		<result property="cancelledString" column="ISCANCELLED" name="是否取消" jdbcType="VARCHAR" />
		<result property="suspendedString" column="ISSUSPENDED" name="是否暂停" jdbcType="VARCHAR" />
		<result property="openString" column="ISOPEN" name="是否打开" jdbcType="VARCHAR" />
		<result property="draftString" column="ISDRAFT" name="是否草稿" jdbcType="VARCHAR" />
		<result property="expectedExecutionTime" column="EXPECTED_EXECUTIONTIME" name="预计执行时间" jdbcType="INTEGER" />
		<result property="agent" column="AGENT" name="任务代理处理者" jdbcType="VARCHAR" />
		<result property="admin" column="ADMIN" name="管理员处理" jdbcType="VARCHAR" />
		<result property="callActivityInstanceId" column="CALLACTIVITY_INSTANCE_ID" name="调用子流程时生成的子流程实例号，用于子流程结束的时候关闭这个任务" jdbcType="VARCHAR" />
		<result property="pendingTaskId" column="PENDINGTASKID" name="转办任务编号" jdbcType="VARCHAR" />
		<result property="archiveTime" column="ARCHIVE_TIME" name="归档时间" jdbcType="TIMESTAMP" />
		<result property="commandId" column="COMMAND_ID" name="处理命令编号" jdbcType="VARCHAR" />
		<result property="commandType" column="COMMAND_TYPE" name="处理命令类型" jdbcType="VARCHAR" />
		<result property="commandMessage" column="COMMAND_MESSAGE" name="处理命令内容" jdbcType="VARCHAR" />

	</resultMap>

	<insert id="insertTaskInstance" parameterType="com.founder.fix.fixflow.core.impl.task.TaskInstanceEntity" remark="插入任务表">
	<![CDATA[ 
		sqlCommand.insert("FIXFLOW_RUN_TASKINSTANCE" , parameter.getPersistentDbMap());
	]]>
	</insert>

	<delete id="deleteTaskById" parameterType="String" remark="根据任务编号删除任务">
	<![CDATA[ 
		Object [] objectParamWhere = new Object[1];
		objectParamWhere[0] = parameter;
		sqlCommand.delete("FIXFLOW_RUN_TASKINSTANCE", " TASKINSTANCE_ID=?", objectParamWhere);
	]]>

	</delete>
	
	<delete id="deleteTaskByProcessInstanceId" parameterType="String" remark="根据任务编号删除任务">
	<![CDATA[ 
		Object [] objectParamWhere = new Object[1];
		objectParamWhere[0] = parameter;
		sqlCommand.delete("FIXFLOW_RUN_TASKINSTANCE", " PROCESSINSTANCE_ID = ?", objectParamWhere);
	]]>
	</delete>
	
	<update id="updateTaskInstance" parameterType="com.founder.fix.fixflow.core.impl.task.TaskInstanceEntity" remark="备注">
	<![CDATA[ 
		Object[] objectParamWhere = new Object[1];
		objectParamWhere[0]=parameter.getId() ;
		sqlCommand.update("FIXFLOW_RUN_TASKINSTANCE",  parameter.getPersistentDbMap(), " TASKINSTANCE_ID=?",objectParamWhere);
	]]>
	</update>

	<select id="selectTaskByTaskId" parameterType="java.lang.String" resultMap="taskResultMap" remark="根据任务编号查询任务实例 ">
		<![CDATA[ 
			sqlText = "SELECT * FROM FIXFLOW_RUN_TASKINSTANCE WHERE TASKINSTANCE_ID = ? ";
			objectParamWhere = new ArrayList();
			objectParamWhere.add(parameter);
			sqlCommand.queryForList(sqlText, objectParamWhere);
		]]>
	</select>
	
	<select id="findTaskByProcessInstanceIdNotEnd" parameterType="java.lang.String" resultMap="taskResultMap" remark="根据流程实例编号返回所有相关任务">
		<![CDATA[ 
			sqlText = "SELECT * FROM FIXFLOW_RUN_TASKINSTANCE WHERE PROCESSINSTANCE_ID = ? ";
			objectParamWhere = new ArrayList();
			objectParamWhere.add(parameter.getParameter());
			sqlCommand.queryForList(sqlText, objectParamWhere);
		]]>
	</select>
	
	
	
	<select id="selectTaskByQueryCriteria" 
	parameterType="com.founder.fix.fixflow.core.impl.db.ListQueryParameterObject" 
	resultMap="taskResultMap" 
	classPath="com.founder.fix.fixflow.expand.rulescript.TaskQueryScript"
	remark="查询任务信息"/>
	
	
	
	<select id="selectTaskCountByQueryCriteria" 
	parameterType="com.founder.fix.fixflow.core.impl.db.ListQueryParameterObject" 
	classPath="com.founder.fix.fixflow.expand.rulescript.TaskQueryCountScript"
	remark="查询任务数量"/>
	
	
	<select id="findAgentUsers" parameterType="String" remark="查询我的代理人">
		<![CDATA[  
		
		sql="SELECT distinct(z.AGENT_ID) EID FROM ( select a.AGENT_ID,b.STATUS,a.AUSER as USERID  from FIXFLOW_AGENT_AGENTDETAILS a left join "
		+"FIXFLOW_AGENT_AGENTINFO b on a.AGENT_ID=b.AGENT_ID where b.STATUS='1'"+
		"and  a.AUSER=?) z";
		objectParamWhere = new ArrayList<Object>();
		objectParamWhere.add(parameter.getParameter());
		listMaps=sqlCommand.queryForList(sql, objectParamWhere);
		return listMaps;
		
		
		]]>
	</select>
	
	
	<select id="findAgentToUsers" parameterType="String" remark="查询代理给我的人">
		<![CDATA[  
		
		sql="SELECT distinct(z.USERID) EID FROM ( select a.AGENT_ID,b.STATUS,a.AUSER as USERID  from FIXFLOW_AGENT_AGENTDETAILS a left join" +
				" FIXFLOW_AGENT_AGENTINFO b on a.AGENT_ID=b.AGENT_ID where b.STATUS='1' " +
				" and  a.AGENT_ID=?) z";
		objectParamWhere = new ArrayList<Object>();
		objectParamWhere.add(parameter.getParameter());
		listMaps=sqlCommand.queryForList(sql, objectParamWhere);
		return listMaps;
		
		
		]]>
	</select>
	
	
	<select id="getTaskStatusByByProcessInstanceIdList" parameterType="Object" remark="根据流程实例编号集合查询状态">
		<![CDATA[  
		import com.founder.fix.fixflow.core.impl.util.QueryTableUtil;
		id = "";
		for (int i = 0; i < parameter.getParameter().size(); i++) {
			if (i == 0) {
				id = "'" + parameter.getParameter().get(i) + "'";
			} else {
				id = id + ",'" + parameter.getParameter().get(i) + "'";
			}
		}
		sqlText = "select x.*,y.END_TIME as PROCESSINSTANCE_ENDTIME  from (select a.*,b.ID,b.type,b.user_id"
				+ ",b.GROUP_ID,b.group_type,b.include_exclusion from  (select * from "+QueryTableUtil.getTableSelect("fixflow_run_taskinstance", taskQuery.getQueryLocation())+" where END_TIME is" + " null and PROCESSINSTANCE_ID in (" + id
				+ ")) a left join "+QueryTableUtil.getTableSelect("fixflow_run_taskidentitylink", taskQuery.getQueryLocation())+" b on " + " a.TASKINSTANCE_ID=b.TASKINSTANCE_ID)  x,"+ProcessInstanceObjKey.ProcessInstanceTableName()+" y where x.PROCESSINSTANCE_ID=" + "y.PROCESSINSTANCE_ID";
		
		returnList = sqlCommand.queryForList(sqlText);
		
		return returnList;
		
		
		]]>
	</select>

	<select id="findTasksByTokenIdList" parameterType="List" resultMap="taskResultMap" remark="根据令牌集合查询任务">
		<![CDATA[ 
		
		import com.founder.fix.fixflow.core.impl.util.QueryTableUtil;
		
		sqlText = "SELECT *  FROM FIXFLOW_RUN_TASKINSTANCE  WHERE END_TIME is not null and TASKTYPE='FIXFLOWTASK' and TOKEN_ID IN ( ";
		for (int i = 0; i < parameter.getParameter().size(); i++) {
			if (i == 0) {
				sqlText = sqlText + "'" + parameter.getParameter().get(i) + "'";
			} else {
				sqlText = sqlText + ",'" + parameter.getParameter().get(i) + "'";
			}
		}
		sqlText = sqlText + " ) ORDER BY END_TIME DESC";
		// 构建查询参数
		dataObj = sqlCommand.queryForList(sqlText);
		
		return dataObj;
	
		]]>
	</select>
	
	
	

	<businessRules id="getTaskInstancePersistentDbMap" parameterType="com.founder.fix.fixflow.core.impl.task.TaskInstanceEntity" resultType="java.util.Map" remark="返回Task对象需要保存到数据的字段Map">
	<![CDATA[ 
		import com.founder.fix.fixflow.core.impl.util.StringUtil;
		objectParam = new HashMap<String, Object>();
		objectParam.put("TASKINSTANCE_ID", parameter.getId());		
		objectParam.put("NAME", parameter.getName());		
		objectParam.put("DESCRIPTION", parameter.getDescription());
		objectParam.put("PROCESSINSTANCE_ID", parameter.getProcessInstanceId());
		objectParam.put("PROCESSDEFINITION_ID", parameter.getProcessDefinitionId());
		objectParam.put("PROCESSDEFINITION_KEY", parameter.getProcessDefinitionKey());	
		objectParam.put("PROCESSDEFINITION_NAME", parameter.getProcessDefinitionName());		
		objectParam.put("VERSION", parameter.getVersion());
		objectParam.put("TOKEN_ID", parameter.getTokenId());
		objectParam.put("NODE_ID", parameter.getNodeId());
		objectParam.put("NODE_NAME", parameter.getNodeName());		
		objectParam.put("PARENTTASK_ID", parameter.getParentTaskInstanceId());		
		objectParam.put("ASSIGNEE", parameter.getAssignee());
		objectParam.put("CLAIM_TIME", parameter.getClaimTime());	
		objectParam.put("CREATE_TIME", parameter.getCreateTime());
		objectParam.put("START_TIME", parameter.getStartTime());		
		objectParam.put("END_TIME", parameter.getEndTime());		
		objectParam.put("DUEDATE", parameter.getDueDate());		
		objectParam.put("PRIORITY", String.valueOf(parameter.getPriority()));		
		objectParam.put("CATEGORY", String.valueOf(parameter.category));		
		objectParam.put("OWNER", parameter.getOwner());		
		objectParam.put("DELEGATIONSTATESTRING", StringUtil.getString(parameter.getDelegationState()));		
		objectParam.put("BIZKEY", parameter.getBizKey());	
		objectParam.put("TASK_COMMENT", parameter.getTaskComment());	
		objectParam.put("FORMURI", parameter.getFormUri());
		objectParam.put("FORMURIVIEW", parameter.getFormUriView());		
		objectParam.put("TASKGROUP", parameter.getTaskGroup());		
		objectParam.put("TASKTYPE", parameter.getTaskInstanceType().toString());	
		objectParam.put("ISBLOCKING", String.valueOf(parameter.isBlocking()));
		objectParam.put("ISCANCELLED", String.valueOf(parameter.isCancelled()));		
		objectParam.put("ISSUSPENDED", String.valueOf(parameter.isSuspended()));		
		objectParam.put("ISOPEN", String.valueOf(parameter.isOpen()));
		objectParam.put("ISDRAFT", String.valueOf(parameter.isDraft()));
		objectParam.put("EXPECTED_EXECUTIONTIME", String.valueOf(parameter.expectedExecutionTime));
		objectParam.put("AGENT", parameter.agent);		
		objectParam.put("ADMIN", parameter.admin);		
		objectParam.put("CALLACTIVITY_INSTANCE_ID", parameter.callActivityInstanceId);		
		objectParam.put("PENDINGTASKID", parameter.pendingTaskId);		
		objectParam.put("ARCHIVE_TIME", parameter.archiveTime);		
		objectParam.put("COMMAND_ID", parameter.getCommandId());
		objectParam.put("COMMAND_TYPE", parameter.getCommandType());		
		objectParam.put("COMMAND_MESSAGE", parameter.getCommandMessage());
		
		persistenceExtensionFields=parameter.getPersistenceExtensionFields();		
		for (String key : persistenceExtensionFields.keySet()) {
			objectParam.put(key, persistenceExtensionFields.get(key));
		}
		return objectParam;
		
	]]>
	</businessRules>
	
	
	<businessRules id="getTaskInstancePersistentState" parameterType="com.founder.fix.fixflow.core.impl.task.TaskInstanceEntity" resultType="java.util.Map" remark="将Task对象转换成Map用来数据传递">
	<![CDATA[ 
	
		persistentState = new HashMap<String, Object>();
		persistentState.put("taskInstanceId", parameter.getId());		
		persistentState.put("name", parameter.getName());		
		persistentState.put("description", parameter.getDescription());
		persistentState.put("processInstanceId", parameter.getProcessInstanceId());
		persistentState.put("processDefinitionId", parameter.getProcessDefinitionId());
		persistentState.put("processDefinitionKey", parameter.getProcessDefinitionKey());		
		persistentState.put("processDefinitionName", parameter.getProcessDefinitionName());	
		persistentState.put("version", parameter.getVersion());
		persistentState.put("tokenId", parameter.getTokenId());
		persistentState.put("nodeId", parameter.getNodeId());
		persistentState.put("nodeName", parameter.getNodeName());		
		persistentState.put("parentTaskInstanceId", parameter.getParentTaskInstanceId());		
		persistentState.put("assignee", parameter.getAssignee());
		persistentState.put("claimTime", parameter.getClaimTime());		
		persistentState.put("createTime", parameter.getCreateTime());
		persistentState.put("startTime", parameter.getStartTime());		
		persistentState.put("endTime", parameter.getEndTime());		
		persistentState.put("dueDate", parameter.getDueDate());		
		persistentState.put("priority", String.valueOf(parameter.getPriority()));		
		persistentState.put("category", String.valueOf(parameter.category));		
		persistentState.put("owner", parameter.getOwner());		
		persistentState.put("delegationState", StringUtil.getString(parameter.getDelegationState()));		
		persistentState.put("bizKey", parameter.getBizKey());		
		persistentState.put("taskComment", parameter.getTaskComment());		
		persistentState.put("formUri", parameter.getFormUri());
		persistentState.put("formUriView", parameter.getFormUriView());		
		persistentState.put("taskGroup", parameter.getTaskGroup());		
		persistentState.put("taskInstanceType", StringUtil.getString(parameter.getTaskInstanceType()));		
		persistentState.put("isBlocking", String.valueOf(parameter.isBlocking());
		persistentState.put("isCancelled", String.valueOf(parameter.isCancelled()));		
		persistentState.put("isSuspended", String.valueOf(parameter.isSuspended()));		
		persistentState.put("isOpen", String.valueOf(parameter.isOpen()));
		persistentState.put("isDraft", String.valueOf(parameter.isDraft()));
		persistentState.put("expectedExecutionTime", String.valueOf(parameter.expectedExecutionTime));
		persistentState.put("agent", parameter.agent);		
		persistentState.put("admin", parameter.admin);		
		persistentState.put("callActivityInstanceId", parameter.callActivityInstanceId);		
		persistentState.put("pendingTaskId", parameter.pendingTaskId);		
		persistentState.put("archiveTime", parameter.archiveTime);		
		persistentState.put("commandId", parameter.getCommandId());
		persistentState.put("commandType", parameter.getCommandType());		
		persistentState.put("commandMessage", parameter.getCommandMessage());
		
		extensionFields=parameter.getExtensionFields();	
			
		for (String key : extensionFields.keySet()) {
			persistentState.put(key, extensionFields.get(key));
		}
		return persistentState;
		
	]]>
	</businessRules>
	
	<businessRules id="taskInstanceClone" parameterType="com.founder.fix.fixflow.core.impl.task.TaskInstanceEntity" resultType="com.founder.fix.fixflow.core.impl.task.TaskInstanceEntity" remark="任务实例拷贝">
	<![CDATA[ 
		import com.founder.fix.fixflow.core.impl.task.TaskInstanceEntity;
	
	
		taskInstanceEntityNew = new TaskInstanceEntity();
		taskInstanceEntityNew.persistentInit(sysRulesConfig.getResultMap("taskResultMap"),parameter.getPersistentDbMap());
		return taskInstanceEntityNew;
		
	]]>
	</businessRules>
	

</sqlmappingconfig:RulesConfig>
